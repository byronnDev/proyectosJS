---
import { LuSquareArrowOutUpRight } from "react-icons/lu";
import { FiGithub } from "react-icons/fi";

interface Props {
    proyecto: {
        img: string;
        title: string;
        description: string;
        demo?: string;
        source?: string;
    }
}

const { proyecto } = Astro.props;
const { img, title, description, demo, source } = proyecto;
---

<article class="card">
    <div class="card-image">
        <div class="skeleton"></div>
        <img src={img} alt={`Captura de pantalla del proyecto ${title}`} 
             loading="lazy"
             onload="this.style.opacity='1'; this.previousElementSibling.style.display='none'"
        />
    </div>
    <div class="card-content">
        <div class="card-text">
            <h3>{title}</h3>
            <p>{description}</p>
        </div>
        <div class="card-links">
            {demo && (
                <a href={demo} target="_blank" rel="noopener noreferrer" class="btn demo">
                    Demo
                    <LuSquareArrowOutUpRight />
                </a>
            )}
            {source && (
                <a href={source} target="_blank" rel="noopener noreferrer" class="btn source">
                    CÃ³digo
                    <FiGithub />
                </a>
            )}
        </div>
    </div>
</article>

<style>
    .card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1);
        transition: transform 0.2s, box-shadow 0.2s;
        margin: 1rem;
        display: flex;
        flex-direction: column;
        max-width: 350px;
        height: 100%;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px -5px rgba(0,0,0,0.2);
    }

    .card-image {
        width: 100%;
        height: 200px;
        overflow: hidden;
        position: relative;
    }

    .card-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
        opacity: 0;
    }

    .skeleton {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(225deg, #ccc 25%, #e0e0e0 50%, #ccc 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
    }

    @keyframes loading {
        0% {
            background-position: -200% 0;
        }
        100% {
            background-position: 200% 0;
        }
    }

    .card:hover .card-image img {
        transform: scale(1.05);
    }

    .card-content {
        padding: 0.5rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .card-text {
        padding: 0rem 1rem;
        text-wrap: pretty;
    }

    h3 {
        font-size: 1.25rem;
        font-weight: 700;
        margin-bottom: 0.75rem;
        color: #333;
    }

    p {
        color: #666;
        line-height: 1.6;
        margin-bottom: 1.5rem;
        flex-grow: 1;
    }

    .card-links {
        display: flex;
        gap: 0.75rem;
        justify-content: flex-end;
        margin-top: auto;
    }

    .btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.2s;
        font-size: 0.9rem;
    }

    .btn svg {
        width: 1.2rem;
        height: 1.2rem;
    }

    .demo {
        background: #000;
        color: white;
    }

    .demo:hover {
        background: #333;
    }

    .source {
        background: #f0f0f0;
        color: #333;
    }

    .source:hover {
        background: #e0e0e0;
    }

    @media (max-width: 640px) {
        .card {
            margin: 1rem 0;
            max-width: 100%;
        }

        .card:active {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px -5px rgba(0,0,0,0.2);
        }

        .card:active .card-image img {
            transform: scale(1.05);
        }
    }

    @media (min-width: 640px) {
        :global(.cards-container) {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            padding: 1rem;
        }
        
        .card {
            margin: 0;
        }
    }

    @media (min-width: 1200px) {
        :global(.cards-container) {
            grid-template-columns: repeat(4, 1fr);
        }
    }
</style>
